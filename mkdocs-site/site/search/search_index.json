{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"ads%20week1/","title":"week1","text":""},{"location":"ads%20week1/#ads-week-1","title":"ads  week 1","text":""},{"location":"ads%20week1/#avl-trees","title":"AVL Trees","text":""},{"location":"ads%20week1/#target","title":"Target","text":"<p>speed up searching, insert&amp;query&amp;delete are all \\(O(ln\\space n)\\) in one step</p>"},{"location":"ads%20week1/#tool","title":"Tool","text":"<p>binary search trees</p>"},{"location":"ads%20week1/#balanced-trees","title":"Balanced trees","text":"<ul> <li>empty tree: height balanced, \\(h\\) of \\(T\\) is \\(-1\\)</li> <li>no empty binary tree \\(T\\): with \\(T_L\\) and \\(T_R\\)<ul> <li>\\(T_L\\) and \\(T_R\\) are height balanced</li> <li>\\(|h_L-h_R|\\leqslant1\\) where \\(h_L\\) and \\(h_R\\) are the heights of \\(h_L\\) and \\(h_R\\)</li> <li>hint: the balance factor \\(BF(node)=h_L-h_R\\), in an AVL tree, \\(BF(node)=-1,0,or\\space1\\)</li> </ul> </li> </ul>"},{"location":"ads%20week1/#tree-rotation","title":"Tree rotation!!!","text":"<ul> <li>time complexity:  \\(O(1)\\)</li> </ul> <pre><code>// right rotation \nfirst  step: T = right subtree of B\nsecond step: right child of B = A\nthrid  step: left subtree of A = T\n\n//left rotation\nfirst  step: T = left subtree of A\nsecond step: left child of A = B\nthrid  step: right subtree of B = T\n</code></pre>"},{"location":"ads%20week1/#avl-trees-insertion","title":"AVL trees insertion!!!","text":"<ul> <li> <p>\\(RR\\space rotation\\)  \uff08\u88ab\u65cb\u8f6c\u7684\u662fMay\uff08\u5f02\u5e38\u8282\u70b9\u7684\u513f\u5b50\uff09\uff0c\u53d1\u751f\u7684\u662fleft rotation\uff0cLL rotation\u540c\u7406\uff09</p> <ul> <li> <p>the trouble maker Nov is in the right subtree's right subtree of the trouble finder Mar. Hence it's called an RR rotation</p> <p></p> </li> </ul> </li> <li> <p>\\(LR\\space rotation\\) \uff08\u53d1\u751f\u4e24\u6b21\u65cb\u8f6c\uff0c\u88ab\u65cb\u8f6c\u7684\u90fd\u662fMay\uff08\u5f02\u5e38\u8282\u70b9\u7684\u5b59\u5b50\uff09\uff0c\u7b2c\u4e00\u6b21\u53d1\u751fleft rotation,\u7b2c\u4e8c\u6b21\u53d1\u751fright rotation, RL rotation \u540c\u7406\uff09</p> <ul> <li> <p>the trouble maker Jan is in the left subtree's right subtree of the trouble finder May. Hence it's called an LR rotation</p> <p></p> </li> </ul> </li> </ul>"},{"location":"ads%20week1/#some-analysis","title":"Some analysis","text":"<ul> <li> <p>\\(n_h\\) : the min num of nodes in a height balanced tree of height h</p> <p>\\(n_h=n_{h-1}+n_{h-2}+1\\)</p> <ul> <li>\\(n_h=F_{h+2}-1\\), \\(F_{h+2}\\) is Fibonacci number, \\(h=O(ln\\space n)\\)</li> </ul> </li> </ul>"},{"location":"ads%20week1/#splay-trees","title":"Splay Trees","text":""},{"location":"ads%20week1/#target_1","title":"Target","text":"<p>any m consecutive tree operations starting from an empty tree take at most \\(O(MlogN)\\) time            </p>"},{"location":"ads%20week1/#rotation","title":"Rotation","text":"<p>when query/find</p> <p>for any nonroot node \\(X\\),delete its parent by \\(P\\) and grandparent by \\(G\\)</p> <ul> <li> <p>case 1: \\(P\\) is the root      \\(\\rightarrow\\)  rotate \\(X\\) and \\(P\\)</p> </li> <li> <p>case 2: \\(P\\) isn't the root</p> <ul> <li>zig-zag: the same as \\(RL\\) and \\(LR\\)</li> <li>zig-zig:<ul> <li>1st  step: rotate \\(P\\) towards \\(G\\)</li> <li>2nd step: rotate \\(X\\) towards \\(P\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"ads%20week1/#deletions","title":"Deletions","text":"<p>step 1: Find \\(X\\) \\(\\leftarrow\\) \\(X\\) will be at the root.</p> <p>step 2: Remove \\(X\\)</p> <p>step 3: Find Max (\\(T_L\\))</p> <p>step 4: Make \\(T_R\\) the right child of the root of Max(\\(T_L\\))</p>"},{"location":"ads%20week1/#amortized-analysis","title":"Amortized Analysis","text":""},{"location":"ads%20week1/#target_2","title":"Target","text":"<p>Any M consecutive operations take at most \\(O(MlogN)\\) time.</p> <ul> <li>worst-case bound \\(\\geqslant\\) amortized bound \\(\\geqslant\\) average-case bound</li> </ul>"},{"location":"ads%20week1/#ways","title":"Ways","text":"<ol> <li>Aggregate analysis<ul> <li>example: Multi-pop</li> </ul> </li> <li>Accounting method ?</li> <li>Potential method</li> </ol>"},{"location":"%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2/","title":"\u5199\u5728\u524d\u9762","text":"<p>2023/3/3</p> <p>\u6ca1\u4ec0\u4e48\u597d\u5199\u7684\uff0c\u4e0d\u8fc7\u5c31\u662f\u8fd8\u6709</p> <p>oop ads \u8ba1\u7ec4 dbs na ode\u4f5c\u4e1a\u8fd8\u6ca1\u5199\u800c\u5df2</p> <p>\u5f53\u7136\u81f3\u4eca\u4e3a\u6b62\uff0c\u6211\u8fd8\u662f\u5f88\u6000\u7591\u4e00\u53f0\u5c0f\u5c0f\u7684\u7535\u8111\u80fd\u6574\u51fa\u8fd9\u4e48\u591a......</p> <p>\u4eba\u7c7b\u592a\u53ef\u6015\u4e86</p>"},{"location":"%E7%AC%AC%E5%9B%9B%E6%AC%A1%E5%BC%80%E5%AD%A6%E5%90%8E/","title":"\u7b2c\u56db\u6b21\u5f00\u5b66\u540e","text":"<p>2023/3/3</p>"},{"location":"%E7%AC%AC%E5%9B%9B%E6%AC%A1%E5%BC%80%E5%AD%A6%E5%90%8E/#_2","title":"\u8ba1\u7ec4","text":""}]}